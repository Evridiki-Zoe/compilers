"/*"	{
int from[50];
          int to[50];
          char c;
          int nestopen=0;
          int nestclose=-1;
          char *buff = malloc(2 * sizeof(char));
          char integer_string[32];

          for (size_t i = 0; i < 50; i++) {
            from[i] = 0;
            to[i] = 0;
          }
          from[0] = yylineno;

          while ((c = input())) {

            if(c == '*') {
                c = input();
                if(c == '/') {
                  to[++nestclose] = yylineno;
                  if (nestopen == nestclose) {
                    int tmp = 1;

                    sprintf(integer_string, "%d", from[0]);
                    strcat(buff, integer_string);
                    strcat(buff, " - ");
                    sprintf(integer_string, "%d", to[nestopen]);
                    strcat(buff, integer_string);

                    add_alpha_token(++token_count, "COMMENT BLOCK_COMMENT", buff, from[0]);

                    while (from[tmp]!=0) {
                      integer_string[0] = '\0';
                      buff[0] = '\0';

                      sprintf(integer_string, "%d", from[tmp]);
                      strcat(buff, integer_string);
                      strcat(buff, " - ");
                      sprintf(integer_string, "%d", to[nestopen - tmp]);
                      strcat(buff, integer_string);
                      add_alpha_token(++token_count, "COMMENT BLOCK_COMMENT", buff, from[tmp]);
                      tmp++;
                    }
                  break;
                 }
			 } else unput(c);

            } else if(c == '/') {
                c = input();
                if (c == '*') {

                  from[++nestopen]=yylineno;
			  }else unput(c);

            }
          }

          if(nestopen!=nestclose){

          yyerror("Multiline comment don't close");
        }
}