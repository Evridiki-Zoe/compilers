Grammar

    0 $accept: program $end

    1 program: multi_stmts

    2 $@1: %empty

    3 $@2: %empty

    4 multi_stmts: $@1 stmt $@2 multi_stmts
    5            | %empty

    6 stmt: expr SEMICOLON
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK SEMICOLON
   12     | CONTINUE SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignmexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULT expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | expr GREATER expr
   23     | expr GREATER_EQUAL expr
   24     | expr LESS expr
   25     | expr LESS_EQUAL expr
   26     | expr EQUAL expr
   27     | expr NEQUAL expr
   28     | expr AND expr
   29     | expr OR expr
   30     | term

   31 term: L_PARENTHES expr R_PARENTHES
   32     | MINUS expr
   33     | NOT expr
   34     | PPLUS lvalue
   35     | lvalue PPLUS
   36     | MMINUS lvalue
   37     | lvalue MMINUS
   38     | primary

   39 $@3: %empty

   40 assignmexpr: lvalue $@3 EQ expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | L_PARENTHES funcdef R_PARENTHES
   45        | const

   46 lvalue: IDENTIFIER
   47       | LOCAL IDENTIFIER
   48       | DCOLON IDENTIFIER
   49       | member

   50 member: lvalue DOT IDENTIFIER
   51       | lvalue L_SBRACKET expr R_SBRACKET
   52       | call DOT IDENTIFIER
   53       | call L_SBRACKET expr R_SBRACKET

   54 call: call L_PARENTHES elist R_PARENTHES
   55     | lvalue callsuffix
   56     | L_PARENTHES funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: L_PARENTHES elist R_PARENTHES

   60 methodcall: DOTS IDENTIFIER L_PARENTHES elist R_PARENTHES

   61 elist: expr multi_exprs
   62      | %empty

   63 multi_exprs: COMMA expr multi_exprs
   64            | %empty

   65 objectdef: L_SBRACKET elist_for_table R_SBRACKET

   66 $@4: %empty

   67 objectdef: L_SBRACKET $@4 indexed R_SBRACKET

   68 elist_for_table: expr multi_exprs_for_table
   69                | %empty

   70 multi_exprs_for_table: COMMA expr multi_exprs_for_table
   71                      | %empty

   72 indexed: indexedelem multi_indexedelem

   73 multi_indexedelem: COMMA indexedelem multi_indexedelem
   74                  | %empty

   75 indexedelem: L_CBRACKET expr COLON expr R_CBRACKET

   76 $@5: %empty

   77 block: L_CBRACKET $@5 multi_stmts R_CBRACKET

   78 $@6: %empty

   79 $@7: %empty

   80 funcdef: funcstart funcname L_PARENTHES $@6 idlist R_PARENTHES $@7 block

   81 funcstart: FUNCTION

   82 funcname: IDENTIFIER
   83         | %empty

   84 const: number
   85      | STRING
   86      | NIL
   87      | TRUE
   88      | FALSE

   89 number: INTEGER
   90       | FLOAT

   91 $@8: %empty

   92 idlist: IDENTIFIER $@8 multi_id
   93       | %empty

   94 $@9: %empty

   95 multi_id: COMMA IDENTIFIER $@9 multi_id
   96         | %empty

   97 $@10: %empty

   98 ifstmt: if_start R_PARENTHES stmt ELSE $@10 stmt
   99       | if_start R_PARENTHES stmt

  100 if_start: IF L_PARENTHES expr

  101 whilestmt: whilestart whilecond stmt

  102 whilestart: WHILE

  103 $@11: %empty

  104 $@12: %empty

  105 whilecond: L_PARENTHES $@11 expr $@12 R_PARENTHES

  106 $@13: %empty

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

  108 for_elist: expr multi_exprs
  109          | %empty

  110 for_cond: expr

  111 for_end: for_elist

  112 returnstmt: RETURN expr SEMICOLON
  113           | RETURN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 100
    ELSE (259) 98
    WHILE (260) 102
    FOR (261) 107
    FUNCTION (262) 81
    RETURN (263) 112 113
    BREAK (264) 11
    CONTINUE (265) 12
    AND (266) 28
    NOT (267) 33
    OR (268) 29
    LOCAL (269) 47
    TRUE <expression> (270) 87
    FALSE <expression> (271) 88
    NIL <expression> (272) 86
    EQ (273) 40
    PLUS (274) 17
    MINUS (275) 18 32
    MULT (276) 19
    DIV (277) 20
    MOD (278) 21
    EQUAL (279) 26
    NEQUAL (280) 27
    PPLUS (281) 34 35
    MMINUS (282) 36 37
    GREATER (283) 22
    LESS (284) 24
    GREATER_EQUAL (285) 23
    LESS_EQUAL (286) 25
    SEMICOLON (287) 6 11 12 15 107 112 113
    COMMA (288) 63 70 73 95
    COLON (289) 75
    DCOLON (290) 48
    DOT (291) 50 52
    DOTS (292) 60
    L_CBRACKET (293) 75 77
    R_CBRACKET (294) 75 77
    L_SBRACKET (295) 51 53 65 67
    R_SBRACKET (296) 51 53 65 67
    L_PARENTHES (297) 31 44 54 56 59 60 80 100 105 107
    R_PARENTHES (298) 31 44 54 56 59 60 80 98 99 105 107
    INTEGER <intValue> (299) 89
    FLOAT <floatValue> (300) 90
    STRING <stringValue> (301) 85
    IDENTIFIER <stringValue> (302) 46 47 48 50 52 60 82 92 95
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    multi_stmts (51)
        on left: 4 5
        on right: 1 4 77
    $@1 (52)
        on left: 2
        on right: 4
    $@2 (53)
        on left: 3
        on right: 4
    stmt (54)
        on left: 6 7 8 9 10 11 12 13 14 15
        on right: 4 98 99 101 107
    expr <expression> (55)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 6 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 40 51 53 61 63 68 70 75 100 105 108 110 112
    term <expression> (56)
        on left: 31 32 33 34 35 36 37 38
        on right: 30
    assignmexpr <expression> (57)
        on left: 40
        on right: 16
    $@3 (58)
        on left: 39
        on right: 40
    primary <expression> (59)
        on left: 41 42 43 44 45
        on right: 38
    lvalue <expression> (60)
        on left: 46 47 48 49
        on right: 34 35 36 37 40 41 50 51 55
    member <expression> (61)
        on left: 50 51 52 53
        on right: 49
    call <expression> (62)
        on left: 54 55 56
        on right: 42 52 53 54
    callsuffix <callexpr> (63)
        on left: 57 58
        on right: 55
    normcall <callexpr> (64)
        on left: 59
        on right: 57
    methodcall <callexpr> (65)
        on left: 60
        on right: 58
    elist <expression> (66)
        on left: 61 62
        on right: 54 56 59 60
    multi_exprs <expression> (67)
        on left: 63 64
        on right: 61 63 108
    objectdef <expression> (68)
        on left: 65 67
        on right: 43
    $@4 (69)
        on left: 66
        on right: 67
    elist_for_table <expression> (70)
        on left: 68 69
        on right: 65
    multi_exprs_for_table <expression> (71)
        on left: 70 71
        on right: 68 70
    indexed <expression> (72)
        on left: 72
        on right: 67
    multi_indexedelem <expression> (73)
        on left: 73 74
        on right: 72 73
    indexedelem <expression> (74)
        on left: 75
        on right: 72 73
    block (75)
        on left: 77
        on right: 13 80
    $@5 (76)
        on left: 76
        on right: 77
    funcdef <expression> (77)
        on left: 80
        on right: 14 44 56
    $@6 (78)
        on left: 78
        on right: 80
    $@7 (79)
        on left: 79
        on right: 80
    funcstart <intValue> (80)
        on left: 81
        on right: 80
    funcname <expression> (81)
        on left: 82 83
        on right: 80
    const <expression> (82)
        on left: 84 85 86 87 88
        on right: 45
    number <expression> (83)
        on left: 89 90
        on right: 84
    idlist (84)
        on left: 92 93
        on right: 80
    $@8 (85)
        on left: 91
        on right: 92
    multi_id (86)
        on left: 95 96
        on right: 92 95
    $@9 (87)
        on left: 94
        on right: 95
    ifstmt (88)
        on left: 98 99
        on right: 7
    $@10 (89)
        on left: 97
        on right: 98
    if_start <intValue> (90)
        on left: 100
        on right: 98 99
    whilestmt (91)
        on left: 101
        on right: 8
    whilestart <intValue> (92)
        on left: 102
        on right: 101
    whilecond <intValue> (93)
        on left: 105
        on right: 101
    $@11 (94)
        on left: 103
        on right: 105
    $@12 (95)
        on left: 104
        on right: 105
    forstmt (96)
        on left: 107
        on right: 9
    $@13 (97)
        on left: 106
        on right: 107
    for_elist <intValue> (98)
        on left: 108 109
        on right: 107 111
    for_cond <intValue> (99)
        on left: 110
        on right: 107
    for_end <intValue> (100)
        on left: 111
        on right: 107
    returnstmt (101)
        on left: 112 113
        on right: 10


State 0

    0 $accept: . program $end

    $end      reduce using rule 5 (multi_stmts)
    $default  reduce using rule 2 ($@1)

    program      go to state 1
    multi_stmts  go to state 2
    $@1          go to state 3


State 1

    0 $accept: program . $end

    $end  shift, and go to state 4


State 2

    1 program: multi_stmts .

    $default  reduce using rule 1 (program)


State 3

    4 multi_stmts: $@1 . stmt $@2 multi_stmts

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 29
    expr         go to state 30
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    funcstart    go to state 40
    const        go to state 41
    number       go to state 42
    ifstmt       go to state 43
    if_start     go to state 44
    whilestmt    go to state 45
    whilestart   go to state 46
    forstmt      go to state 47
    returnstmt   go to state 48


State 4

    0 $accept: program $end .

    $default  accept


State 5

  100 if_start: IF . L_PARENTHES expr

    L_PARENTHES  shift, and go to state 49


State 6

  102 whilestart: WHILE .

    $default  reduce using rule 102 (whilestart)


State 7

  107 forstmt: FOR . L_PARENTHES $@13 for_elist SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    L_PARENTHES  shift, and go to state 50


State 8

   81 funcstart: FUNCTION .

    $default  reduce using rule 81 (funcstart)


State 9

  112 returnstmt: RETURN . expr SEMICOLON
  113           | RETURN . SEMICOLON

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 51
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 52
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 10

   11 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 11

   12 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 12

   33 term: NOT . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 55
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 13

   47 lvalue: LOCAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 56


State 14

   87 const: TRUE .

    $default  reduce using rule 87 (const)


State 15

   88 const: FALSE .

    $default  reduce using rule 88 (const)


State 16

   86 const: NIL .

    $default  reduce using rule 86 (const)


State 17

   32 term: MINUS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 57
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 18

   34 term: PPLUS . lvalue

    LOCAL        shift, and go to state 13
    DCOLON       shift, and go to state 21
    L_PARENTHES  shift, and go to state 58
    IDENTIFIER   shift, and go to state 28

    lvalue  go to state 59
    member  go to state 35
    call    go to state 60


State 19

   36 term: MMINUS . lvalue

    LOCAL        shift, and go to state 13
    DCOLON       shift, and go to state 21
    L_PARENTHES  shift, and go to state 58
    IDENTIFIER   shift, and go to state 28

    lvalue  go to state 61
    member  go to state 35
    call    go to state 60


State 20

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 21

   48 lvalue: DCOLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 22

   77 block: L_CBRACKET . $@5 multi_stmts R_CBRACKET

    $default  reduce using rule 76 ($@5)

    $@5  go to state 63


State 23

   65 objectdef: L_SBRACKET . elist_for_table R_SBRACKET
   67          | L_SBRACKET . $@4 indexed R_SBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    R_SBRACKET  reduce using rule 69 (elist_for_table)
    $default    reduce using rule 66 ($@4)

    expr             go to state 64
    term             go to state 31
    assignmexpr      go to state 32
    primary          go to state 33
    lvalue           go to state 34
    member           go to state 35
    call             go to state 36
    objectdef        go to state 37
    $@4              go to state 65
    elist_for_table  go to state 66
    const            go to state 41
    number           go to state 42


State 24

   31 term: L_PARENTHES . expr R_PARENTHES
   44 primary: L_PARENTHES . funcdef R_PARENTHES
   56 call: L_PARENTHES . funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES

    FUNCTION     shift, and go to state 8
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 67
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    funcdef      go to state 68
    funcstart    go to state 40
    const        go to state 41
    number       go to state 42


State 25

   89 number: INTEGER .

    $default  reduce using rule 89 (number)


State 26

   90 number: FLOAT .

    $default  reduce using rule 90 (number)


State 27

   85 const: STRING .

    $default  reduce using rule 85 (const)


State 28

   46 lvalue: IDENTIFIER .

    $default  reduce using rule 46 (lvalue)


State 29

    4 multi_stmts: $@1 stmt . $@2 multi_stmts

    $default  reduce using rule 3 ($@2)

    $@2  go to state 69


State 30

    6 stmt: expr . SEMICOLON
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    SEMICOLON      shift, and go to state 83


State 31

   30 expr: term .

    $default  reduce using rule 30 (expr)


State 32

   16 expr: assignmexpr .

    $default  reduce using rule 16 (expr)


State 33

   38 term: primary .

    $default  reduce using rule 38 (term)


State 34

   35 term: lvalue . PPLUS
   37     | lvalue . MMINUS
   40 assignmexpr: lvalue . $@3 EQ expr
   41 primary: lvalue .
   50 member: lvalue . DOT IDENTIFIER
   51       | lvalue . L_SBRACKET expr R_SBRACKET
   55 call: lvalue . callsuffix

    PPLUS        shift, and go to state 84
    MMINUS       shift, and go to state 85
    DOT          shift, and go to state 86
    DOTS         shift, and go to state 87
    L_SBRACKET   shift, and go to state 88
    L_PARENTHES  shift, and go to state 89

    EQ        reduce using rule 39 ($@3)
    $default  reduce using rule 41 (primary)

    $@3         go to state 90
    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 35

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 36

   42 primary: call .
   52 member: call . DOT IDENTIFIER
   53       | call . L_SBRACKET expr R_SBRACKET
   54 call: call . L_PARENTHES elist R_PARENTHES

    DOT          shift, and go to state 94
    L_SBRACKET   shift, and go to state 95
    L_PARENTHES  shift, and go to state 96

    $default  reduce using rule 42 (primary)


State 37

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 38

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 39

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 40

   80 funcdef: funcstart . funcname L_PARENTHES $@6 idlist R_PARENTHES $@7 block

    IDENTIFIER  shift, and go to state 97

    $default  reduce using rule 83 (funcname)

    funcname  go to state 98


State 41

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 42

   84 const: number .

    $default  reduce using rule 84 (const)


State 43

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


State 44

   98 ifstmt: if_start . R_PARENTHES stmt ELSE $@10 stmt
   99       | if_start . R_PARENTHES stmt

    R_PARENTHES  shift, and go to state 99


State 45

    8 stmt: whilestmt .

    $default  reduce using rule 8 (stmt)


State 46

  101 whilestmt: whilestart . whilecond stmt

    L_PARENTHES  shift, and go to state 100

    whilecond  go to state 101


State 47

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


State 48

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


State 49

  100 if_start: IF L_PARENTHES . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 102
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 50

  107 forstmt: FOR L_PARENTHES . $@13 for_elist SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    $default  reduce using rule 106 ($@13)

    $@13  go to state 103


State 51

  113 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 113 (returnstmt)


State 52

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  112 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    SEMICOLON      shift, and go to state 104


State 53

   11 stmt: BREAK SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 54

   12 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 55

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   33 term: NOT expr .

    $default  reduce using rule 33 (term)


State 56

   47 lvalue: LOCAL IDENTIFIER .

    $default  reduce using rule 47 (lvalue)


State 57

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   32 term: MINUS expr .

    $default  reduce using rule 32 (term)


State 58

   56 call: L_PARENTHES . funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES

    FUNCTION  shift, and go to state 8

    funcdef    go to state 105
    funcstart  go to state 40


State 59

   34 term: PPLUS lvalue .
   50 member: lvalue . DOT IDENTIFIER
   51       | lvalue . L_SBRACKET expr R_SBRACKET
   55 call: lvalue . callsuffix

    DOT          shift, and go to state 86
    DOTS         shift, and go to state 87
    L_SBRACKET   shift, and go to state 88
    L_PARENTHES  shift, and go to state 89

    $default  reduce using rule 34 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 60

   52 member: call . DOT IDENTIFIER
   53       | call . L_SBRACKET expr R_SBRACKET
   54 call: call . L_PARENTHES elist R_PARENTHES

    DOT          shift, and go to state 94
    L_SBRACKET   shift, and go to state 95
    L_PARENTHES  shift, and go to state 96


State 61

   36 term: MMINUS lvalue .
   50 member: lvalue . DOT IDENTIFIER
   51       | lvalue . L_SBRACKET expr R_SBRACKET
   55 call: lvalue . callsuffix

    DOT          shift, and go to state 86
    DOTS         shift, and go to state 87
    L_SBRACKET   shift, and go to state 88
    L_PARENTHES  shift, and go to state 89

    $default  reduce using rule 36 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 62

   48 lvalue: DCOLON IDENTIFIER .

    $default  reduce using rule 48 (lvalue)


State 63

   77 block: L_CBRACKET $@5 . multi_stmts R_CBRACKET

    R_CBRACKET  reduce using rule 5 (multi_stmts)
    $default    reduce using rule 2 ($@1)

    multi_stmts  go to state 106
    $@1          go to state 3


State 64

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   68 elist_for_table: expr . multi_exprs_for_table

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COMMA          shift, and go to state 107

    $default  reduce using rule 71 (multi_exprs_for_table)

    multi_exprs_for_table  go to state 108


State 65

   67 objectdef: L_SBRACKET $@4 . indexed R_SBRACKET

    L_CBRACKET  shift, and go to state 109

    indexed      go to state 110
    indexedelem  go to state 111


State 66

   65 objectdef: L_SBRACKET elist_for_table . R_SBRACKET

    R_SBRACKET  shift, and go to state 112


State 67

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   31 term: L_PARENTHES expr . R_PARENTHES

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    R_PARENTHES    shift, and go to state 113


State 68

   44 primary: L_PARENTHES funcdef . R_PARENTHES
   56 call: L_PARENTHES funcdef . R_PARENTHES L_PARENTHES elist R_PARENTHES

    R_PARENTHES  shift, and go to state 114


State 69

    4 multi_stmts: $@1 stmt $@2 . multi_stmts

    $end        reduce using rule 5 (multi_stmts)
    R_CBRACKET  reduce using rule 5 (multi_stmts)
    $default    reduce using rule 2 ($@1)

    multi_stmts  go to state 115
    $@1          go to state 3


State 70

   28 expr: expr AND . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 116
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 71

   29 expr: expr OR . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 117
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 72

   17 expr: expr PLUS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 118
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 73

   18 expr: expr MINUS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 119
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 74

   19 expr: expr MULT . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 120
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 75

   20 expr: expr DIV . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 121
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 76

   21 expr: expr MOD . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 122
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 77

   26 expr: expr EQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 123
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 78

   27 expr: expr NEQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 124
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 79

   22 expr: expr GREATER . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 125
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 80

   24 expr: expr LESS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 126
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 81

   23 expr: expr GREATER_EQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 127
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 82

   25 expr: expr LESS_EQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 128
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 83

    6 stmt: expr SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 84

   35 term: lvalue PPLUS .

    $default  reduce using rule 35 (term)


State 85

   37 term: lvalue MMINUS .

    $default  reduce using rule 37 (term)


State 86

   50 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 129


State 87

   60 methodcall: DOTS . IDENTIFIER L_PARENTHES elist R_PARENTHES

    IDENTIFIER  shift, and go to state 130


State 88

   51 member: lvalue L_SBRACKET . expr R_SBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 131
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 89

   59 normcall: L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expr         go to state 132
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 133
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 90

   40 assignmexpr: lvalue $@3 . EQ expr

    EQ  shift, and go to state 134


State 91

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 92

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 93

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 94

   52 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 135


State 95

   53 member: call L_SBRACKET . expr R_SBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 136
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 96

   54 call: call L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expr         go to state 132
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 137
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 97

   82 funcname: IDENTIFIER .

    $default  reduce using rule 82 (funcname)


State 98

   80 funcdef: funcstart funcname . L_PARENTHES $@6 idlist R_PARENTHES $@7 block

    L_PARENTHES  shift, and go to state 138


State 99

   98 ifstmt: if_start R_PARENTHES . stmt ELSE $@10 stmt
   99       | if_start R_PARENTHES . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 139
    expr         go to state 30
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    funcstart    go to state 40
    const        go to state 41
    number       go to state 42
    ifstmt       go to state 43
    if_start     go to state 44
    whilestmt    go to state 45
    whilestart   go to state 46
    forstmt      go to state 47
    returnstmt   go to state 48


State 100

  105 whilecond: L_PARENTHES . $@11 expr $@12 R_PARENTHES

    $default  reduce using rule 103 ($@11)

    $@11  go to state 140


State 101

  101 whilestmt: whilestart whilecond . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 141
    expr         go to state 30
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    funcstart    go to state 40
    const        go to state 41
    number       go to state 42
    ifstmt       go to state 43
    if_start     go to state 44
    whilestmt    go to state 45
    whilestart   go to state 46
    forstmt      go to state 47
    returnstmt   go to state 48


State 102

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  100 if_start: IF L_PARENTHES expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 100 (if_start)


State 103

  107 forstmt: FOR L_PARENTHES $@13 . for_elist SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 109 (for_elist)

    expr         go to state 142
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42
    for_elist    go to state 143


State 104

  112 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 112 (returnstmt)


State 105

   56 call: L_PARENTHES funcdef . R_PARENTHES L_PARENTHES elist R_PARENTHES

    R_PARENTHES  shift, and go to state 144


State 106

   77 block: L_CBRACKET $@5 multi_stmts . R_CBRACKET

    R_CBRACKET  shift, and go to state 145


State 107

   70 multi_exprs_for_table: COMMA . expr multi_exprs_for_table

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 146
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 108

   68 elist_for_table: expr multi_exprs_for_table .

    $default  reduce using rule 68 (elist_for_table)


State 109

   75 indexedelem: L_CBRACKET . expr COLON expr R_CBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 147
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 110

   67 objectdef: L_SBRACKET $@4 indexed . R_SBRACKET

    R_SBRACKET  shift, and go to state 148


State 111

   72 indexed: indexedelem . multi_indexedelem

    COMMA  shift, and go to state 149

    $default  reduce using rule 74 (multi_indexedelem)

    multi_indexedelem  go to state 150


State 112

   65 objectdef: L_SBRACKET elist_for_table R_SBRACKET .

    $default  reduce using rule 65 (objectdef)


State 113

   31 term: L_PARENTHES expr R_PARENTHES .

    $default  reduce using rule 31 (term)


State 114

   44 primary: L_PARENTHES funcdef R_PARENTHES .
   56 call: L_PARENTHES funcdef R_PARENTHES . L_PARENTHES elist R_PARENTHES

    L_PARENTHES  shift, and go to state 151

    $default  reduce using rule 44 (primary)


State 115

    4 multi_stmts: $@1 stmt $@2 multi_stmts .

    $default  reduce using rule 4 (multi_stmts)


State 116

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   28     | expr AND expr .
   29     | expr . OR expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 28 (expr)


State 117

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   29     | expr OR expr .

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 29 (expr)


State 118

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    MULT  shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76

    $default  reduce using rule 17 (expr)


State 119

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    MULT  shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76

    $default  reduce using rule 18 (expr)


State 120

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   19     | expr MULT expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 121

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 122

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 123

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   26     | expr EQUAL expr .
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 124

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   27     | expr NEQUAL expr .
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 125

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   22     | expr GREATER expr .
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULT   shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 126

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   24     | expr LESS expr .
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULT   shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 127

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   23     | expr GREATER_EQUAL expr .
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULT   shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 128

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   25     | expr LESS_EQUAL expr .
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULT   shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   50 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 50 (member)


State 130

   60 methodcall: DOTS IDENTIFIER . L_PARENTHES elist R_PARENTHES

    L_PARENTHES  shift, and go to state 152


State 131

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   51 member: lvalue L_SBRACKET expr . R_SBRACKET

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    R_SBRACKET     shift, and go to state 153


State 132

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   61 elist: expr . multi_exprs

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COMMA          shift, and go to state 154

    $default  reduce using rule 64 (multi_exprs)

    multi_exprs  go to state 155


State 133

   59 normcall: L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 156


State 134

   40 assignmexpr: lvalue $@3 EQ . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 157
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 135

   52 member: call DOT IDENTIFIER .

    $default  reduce using rule 52 (member)


State 136

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   53 member: call L_SBRACKET expr . R_SBRACKET

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    R_SBRACKET     shift, and go to state 158


State 137

   54 call: call L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 159


State 138

   80 funcdef: funcstart funcname L_PARENTHES . $@6 idlist R_PARENTHES $@7 block

    $default  reduce using rule 78 ($@6)

    $@6  go to state 160


State 139

   98 ifstmt: if_start R_PARENTHES stmt . ELSE $@10 stmt
   99       | if_start R_PARENTHES stmt .

    ELSE  shift, and go to state 161

    $default  reduce using rule 99 (ifstmt)


State 140

  105 whilecond: L_PARENTHES $@11 . expr $@12 R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 162
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 141

  101 whilestmt: whilestart whilecond stmt .

    $default  reduce using rule 101 (whilestmt)


State 142

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  108 for_elist: expr . multi_exprs

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COMMA          shift, and go to state 154

    $default  reduce using rule 64 (multi_exprs)

    multi_exprs  go to state 163


State 143

  107 forstmt: FOR L_PARENTHES $@13 for_elist . SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    SEMICOLON  shift, and go to state 164


State 144

   56 call: L_PARENTHES funcdef R_PARENTHES . L_PARENTHES elist R_PARENTHES

    L_PARENTHES  shift, and go to state 151


State 145

   77 block: L_CBRACKET $@5 multi_stmts R_CBRACKET .

    $default  reduce using rule 77 (block)


State 146

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   70 multi_exprs_for_table: COMMA expr . multi_exprs_for_table

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COMMA          shift, and go to state 107

    $default  reduce using rule 71 (multi_exprs_for_table)

    multi_exprs_for_table  go to state 165


State 147

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   75 indexedelem: L_CBRACKET expr . COLON expr R_CBRACKET

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COLON          shift, and go to state 166


State 148

   67 objectdef: L_SBRACKET $@4 indexed R_SBRACKET .

    $default  reduce using rule 67 (objectdef)


State 149

   73 multi_indexedelem: COMMA . indexedelem multi_indexedelem

    L_CBRACKET  shift, and go to state 109

    indexedelem  go to state 167


State 150

   72 indexed: indexedelem multi_indexedelem .

    $default  reduce using rule 72 (indexed)


State 151

   56 call: L_PARENTHES funcdef R_PARENTHES L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expr         go to state 132
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 168
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 152

   60 methodcall: DOTS IDENTIFIER L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 62 (elist)

    expr         go to state 132
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 169
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 153

   51 member: lvalue L_SBRACKET expr R_SBRACKET .

    $default  reduce using rule 51 (member)


State 154

   63 multi_exprs: COMMA . expr multi_exprs

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 170
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 155

   61 elist: expr multi_exprs .

    $default  reduce using rule 61 (elist)


State 156

   59 normcall: L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 59 (normcall)


State 157

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   40 assignmexpr: lvalue $@3 EQ expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 40 (assignmexpr)


State 158

   53 member: call L_SBRACKET expr R_SBRACKET .

    $default  reduce using rule 53 (member)


State 159

   54 call: call L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 54 (call)


State 160

   80 funcdef: funcstart funcname L_PARENTHES $@6 . idlist R_PARENTHES $@7 block

    IDENTIFIER  shift, and go to state 171

    $default  reduce using rule 93 (idlist)

    idlist  go to state 172


State 161

   98 ifstmt: if_start R_PARENTHES stmt ELSE . $@10 stmt

    $default  reduce using rule 97 ($@10)

    $@10  go to state 173


State 162

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  105 whilecond: L_PARENTHES $@11 expr . $@12 R_PARENTHES

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 104 ($@12)

    $@12  go to state 174


State 163

  108 for_elist: expr multi_exprs .

    $default  reduce using rule 108 (for_elist)


State 164

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON . for_cond SEMICOLON for_end R_PARENTHES stmt

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 175
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42
    for_cond     go to state 176


State 165

   70 multi_exprs_for_table: COMMA expr multi_exprs_for_table .

    $default  reduce using rule 70 (multi_exprs_for_table)


State 166

   75 indexedelem: L_CBRACKET expr COLON . expr R_CBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 177
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42


State 167

   73 multi_indexedelem: COMMA indexedelem . multi_indexedelem

    COMMA  shift, and go to state 149

    $default  reduce using rule 74 (multi_indexedelem)

    multi_indexedelem  go to state 178


State 168

   56 call: L_PARENTHES funcdef R_PARENTHES L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 179


State 169

   60 methodcall: DOTS IDENTIFIER L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 180


State 170

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   63 multi_exprs: COMMA expr . multi_exprs

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COMMA          shift, and go to state 154

    $default  reduce using rule 64 (multi_exprs)

    multi_exprs  go to state 181


State 171

   92 idlist: IDENTIFIER . $@8 multi_id

    $default  reduce using rule 91 ($@8)

    $@8  go to state 182


State 172

   80 funcdef: funcstart funcname L_PARENTHES $@6 idlist . R_PARENTHES $@7 block

    R_PARENTHES  shift, and go to state 183


State 173

   98 ifstmt: if_start R_PARENTHES stmt ELSE $@10 . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 184
    expr         go to state 30
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    funcstart    go to state 40
    const        go to state 41
    number       go to state 42
    ifstmt       go to state 43
    if_start     go to state 44
    whilestmt    go to state 45
    whilestart   go to state 46
    forstmt      go to state 47
    returnstmt   go to state 48


State 174

  105 whilecond: L_PARENTHES $@11 expr $@12 . R_PARENTHES

    R_PARENTHES  shift, and go to state 185


State 175

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  110 for_cond: expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 110 (for_cond)


State 176

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON for_cond . SEMICOLON for_end R_PARENTHES stmt

    SEMICOLON  shift, and go to state 186


State 177

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULT expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   75 indexedelem: L_CBRACKET expr COLON expr . R_CBRACKET

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MULT           shift, and go to state 74
    DIV            shift, and go to state 75
    MOD            shift, and go to state 76
    EQUAL          shift, and go to state 77
    NEQUAL         shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    R_CBRACKET     shift, and go to state 187


State 178

   73 multi_indexedelem: COMMA indexedelem multi_indexedelem .

    $default  reduce using rule 73 (multi_indexedelem)


State 179

   56 call: L_PARENTHES funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 56 (call)


State 180

   60 methodcall: DOTS IDENTIFIER L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 60 (methodcall)


State 181

   63 multi_exprs: COMMA expr multi_exprs .

    $default  reduce using rule 63 (multi_exprs)


State 182

   92 idlist: IDENTIFIER $@8 . multi_id

    COMMA  shift, and go to state 188

    $default  reduce using rule 96 (multi_id)

    multi_id  go to state 189


State 183

   80 funcdef: funcstart funcname L_PARENTHES $@6 idlist R_PARENTHES . $@7 block

    $default  reduce using rule 79 ($@7)

    $@7  go to state 190


State 184

   98 ifstmt: if_start R_PARENTHES stmt ELSE $@10 stmt .

    $default  reduce using rule 98 (ifstmt)


State 185

  105 whilecond: L_PARENTHES $@11 expr $@12 R_PARENTHES .

    $default  reduce using rule 105 (whilecond)


State 186

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON for_cond SEMICOLON . for_end R_PARENTHES stmt

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 109 (for_elist)

    expr         go to state 142
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 41
    number       go to state 42
    for_elist    go to state 191
    for_end      go to state 192


State 187

   75 indexedelem: L_CBRACKET expr COLON expr R_CBRACKET .

    $default  reduce using rule 75 (indexedelem)


State 188

   95 multi_id: COMMA . IDENTIFIER $@9 multi_id

    IDENTIFIER  shift, and go to state 193


State 189

   92 idlist: IDENTIFIER $@8 multi_id .

    $default  reduce using rule 92 (idlist)


State 190

   80 funcdef: funcstart funcname L_PARENTHES $@6 idlist R_PARENTHES $@7 . block

    L_CBRACKET  shift, and go to state 22

    block  go to state 194


State 191

  111 for_end: for_elist .

    $default  reduce using rule 111 (for_end)


State 192

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON for_cond SEMICOLON for_end . R_PARENTHES stmt

    R_PARENTHES  shift, and go to state 195


State 193

   95 multi_id: COMMA IDENTIFIER . $@9 multi_id

    $default  reduce using rule 94 ($@9)

    $@9  go to state 196


State 194

   80 funcdef: funcstart funcname L_PARENTHES $@6 idlist R_PARENTHES $@7 block .

    $default  reduce using rule 80 (funcdef)


State 195

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON for_cond SEMICOLON for_end R_PARENTHES . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 197
    expr         go to state 30
    term         go to state 31
    assignmexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    funcstart    go to state 40
    const        go to state 41
    number       go to state 42
    ifstmt       go to state 43
    if_start     go to state 44
    whilestmt    go to state 45
    whilestart   go to state 46
    forstmt      go to state 47
    returnstmt   go to state 48


State 196

   95 multi_id: COMMA IDENTIFIER $@9 . multi_id

    COMMA  shift, and go to state 188

    $default  reduce using rule 96 (multi_id)

    multi_id  go to state 198


State 197

  107 forstmt: FOR L_PARENTHES $@13 for_elist SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt .

    $default  reduce using rule 107 (forstmt)


State 198

   95 multi_id: COMMA IDENTIFIER $@9 multi_id .

    $default  reduce using rule 95 (multi_id)
