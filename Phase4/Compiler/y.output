Grammar

    0 $accept: program $end

    1 program: multi_stmts

    2 @1: /* empty */

    3 @2: /* empty */

    4 multi_stmts: @1 stmt @2 multi_stmts
    5            | /* empty */

    6 stmt: expr SEMICOLON
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK SEMICOLON
   12     | CONTINUE SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignmexpr
   17     | boolResexpr
   18     | arexpr

   19 @3: /* empty */

   20 expr: expr AND @3 epsilon expr

   21 @4: /* empty */

   22 expr: expr OR @4 epsilon expr
   23     | NOT expr
   24     | term

   25 epsilon: /* empty */

   26 arexpr: expr PLUS expr
   27       | expr MINUS expr
   28       | expr MULT expr
   29       | expr DIV expr
   30       | expr MOD expr

   31 boolResexpr: expr GREATER expr
   32            | expr GREATER_EQUAL expr
   33            | expr LESS expr
   34            | expr LESS_EQUAL expr
   35            | expr EQUAL expr
   36            | expr NEQUAL expr

   37 @5: /* empty */

   38 term: L_PARENTHES @5 expr R_PARENTHES
   39     | MINUS expr
   40     | PPLUS lvalue
   41     | lvalue PPLUS
   42     | MMINUS lvalue
   43     | lvalue MMINUS
   44     | primary

   45 @6: /* empty */

   46 assignmexpr: lvalue @6 EQ expr

   47 primary: lvalue
   48        | call
   49        | objectdef
   50        | L_PARENTHES funcdef R_PARENTHES
   51        | const

   52 lvalue: IDENTIFIER
   53       | LOCAL IDENTIFIER
   54       | DCOLON IDENTIFIER
   55       | member

   56 member: lvalue DOT IDENTIFIER
   57       | lvalue L_SBRACKET expr R_SBRACKET
   58       | call DOT IDENTIFIER
   59       | call L_SBRACKET expr R_SBRACKET

   60 call: call L_PARENTHES elist R_PARENTHES
   61     | lvalue callsuffix
   62     | L_PARENTHES funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES

   63 callsuffix: normcall
   64           | methodcall

   65 normcall: L_PARENTHES elist R_PARENTHES

   66 methodcall: DOTS IDENTIFIER L_PARENTHES elist R_PARENTHES

   67 elist: expr multi_exprs
   68      | /* empty */

   69 multi_exprs: COMMA expr multi_exprs
   70            | /* empty */

   71 objectdef: L_SBRACKET elist_for_table R_SBRACKET

   72 @7: /* empty */

   73 objectdef: L_SBRACKET @7 indexed R_SBRACKET

   74 elist_for_table: expr multi_exprs_for_table
   75                | /* empty */

   76 multi_exprs_for_table: COMMA expr multi_exprs_for_table
   77                      | /* empty */

   78 indexed: indexedelem multi_indexedelem

   79 multi_indexedelem: COMMA indexedelem multi_indexedelem
   80                  | /* empty */

   81 @8: /* empty */

   82 indexedelem: L_CBRACKET expr @8 COLON expr R_CBRACKET

   83 @9: /* empty */

   84 block: L_CBRACKET @9 multi_stmts R_CBRACKET

   85 @10: /* empty */

   86 @11: /* empty */

   87 funcdef: funcstart funcname L_PARENTHES @10 idlist R_PARENTHES @11 block

   88 funcstart: FUNCTION

   89 funcname: IDENTIFIER
   90         | /* empty */

   91 const: number
   92      | STRING
   93      | NIL
   94      | TRUE
   95      | FALSE

   96 number: INTEGER
   97       | FLOAT

   98 @12: /* empty */

   99 idlist: IDENTIFIER @12 multi_id
  100       | /* empty */

  101 @13: /* empty */

  102 multi_id: COMMA IDENTIFIER @13 multi_id
  103         | /* empty */

  104 @14: /* empty */

  105 ifstmt: if_start R_PARENTHES stmt ELSE @14 stmt
  106       | if_start R_PARENTHES stmt

  107 if_start: IF L_PARENTHES expr

  108 whilestmt: whilestart whilecond stmt

  109 whilestart: WHILE

  110 @15: /* empty */

  111 @16: /* empty */

  112 whilecond: L_PARENTHES @15 expr @16 R_PARENTHES

  113 @17: /* empty */

  114 @18: /* empty */

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

  116 for_elist: expr multi_exprs
  117          | /* empty */

  118 for_cond: expr

  119 for_end: for_elist

  120 returnstmt: RETURN expr SEMICOLON
  121           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 107
ELSE (259) 105
WHILE (260) 109
FOR (261) 115
FUNCTION (262) 88
RETURN (263) 120 121
BREAK (264) 11
CONTINUE (265) 12
AND (266) 20
NOT (267) 23
OR (268) 22
LOCAL (269) 53
TRUE (270) 94
FALSE (271) 95
NIL (272) 93
EQ (273) 46
PLUS (274) 26
MINUS (275) 27 39
MULT (276) 28
DIV (277) 29
MOD (278) 30
EQUAL (279) 35
NEQUAL (280) 36
PPLUS (281) 40 41
MMINUS (282) 42 43
GREATER (283) 31
LESS (284) 33
GREATER_EQUAL (285) 32
LESS_EQUAL (286) 34
SEMICOLON (287) 6 11 12 15 115 120 121
COMMA (288) 69 76 79 102
COLON (289) 82
DCOLON (290) 54
DOT (291) 56 58
DOTS (292) 66
L_CBRACKET (293) 82 84
R_CBRACKET (294) 82 84
L_SBRACKET (295) 57 59 71 73
R_SBRACKET (296) 57 59 71 73
L_PARENTHES (297) 38 50 60 62 65 66 87 107 112 115
R_PARENTHES (298) 38 50 60 62 65 66 87 105 106 112 115
INTEGER (299) 96
FLOAT (300) 97
STRING (301) 92
IDENTIFIER (302) 52 53 54 56 58 66 89 99 102
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
multi_stmts (51)
    on left: 4 5, on right: 1 4 84
@1 (52)
    on left: 2, on right: 4
@2 (53)
    on left: 3, on right: 4
stmt (54)
    on left: 6 7 8 9 10 11 12 13 14 15, on right: 4 105 106 108 115
expr (55)
    on left: 16 17 18 20 22 23 24, on right: 6 20 22 23 26 27 28 29
    30 31 32 33 34 35 36 38 39 46 57 59 67 69 74 76 82 107 112 116
    118 120
@3 (56)
    on left: 19, on right: 20
@4 (57)
    on left: 21, on right: 22
epsilon (58)
    on left: 25, on right: 20 22
arexpr (59)
    on left: 26 27 28 29 30, on right: 18
boolResexpr (60)
    on left: 31 32 33 34 35 36, on right: 17
term (61)
    on left: 38 39 40 41 42 43 44, on right: 24
@5 (62)
    on left: 37, on right: 38
assignmexpr (63)
    on left: 46, on right: 16
@6 (64)
    on left: 45, on right: 46
primary (65)
    on left: 47 48 49 50 51, on right: 44
lvalue (66)
    on left: 52 53 54 55, on right: 40 41 42 43 46 47 56 57 61
member (67)
    on left: 56 57 58 59, on right: 55
call (68)
    on left: 60 61 62, on right: 48 58 59 60
callsuffix (69)
    on left: 63 64, on right: 61
normcall (70)
    on left: 65, on right: 63
methodcall (71)
    on left: 66, on right: 64
elist (72)
    on left: 67 68, on right: 60 62 65 66
multi_exprs (73)
    on left: 69 70, on right: 67 69 116
objectdef (74)
    on left: 71 73, on right: 49
@7 (75)
    on left: 72, on right: 73
elist_for_table (76)
    on left: 74 75, on right: 71
multi_exprs_for_table (77)
    on left: 76 77, on right: 74 76
indexed (78)
    on left: 78, on right: 73
multi_indexedelem (79)
    on left: 79 80, on right: 78 79
indexedelem (80)
    on left: 82, on right: 78 79
@8 (81)
    on left: 81, on right: 82
block (82)
    on left: 84, on right: 13 87
@9 (83)
    on left: 83, on right: 84
funcdef (84)
    on left: 87, on right: 14 50 62
@10 (85)
    on left: 85, on right: 87
@11 (86)
    on left: 86, on right: 87
funcstart (87)
    on left: 88, on right: 87
funcname (88)
    on left: 89 90, on right: 87
const (89)
    on left: 91 92 93 94 95, on right: 51
number (90)
    on left: 96 97, on right: 91
idlist (91)
    on left: 99 100, on right: 87
@12 (92)
    on left: 98, on right: 99
multi_id (93)
    on left: 102 103, on right: 99 102
@13 (94)
    on left: 101, on right: 102
ifstmt (95)
    on left: 105 106, on right: 7
@14 (96)
    on left: 104, on right: 105
if_start (97)
    on left: 107, on right: 105 106
whilestmt (98)
    on left: 108, on right: 8
whilestart (99)
    on left: 109, on right: 108
whilecond (100)
    on left: 112, on right: 108
@15 (101)
    on left: 110, on right: 112
@16 (102)
    on left: 111, on right: 112
forstmt (103)
    on left: 115, on right: 9
@17 (104)
    on left: 113, on right: 115
@18 (105)
    on left: 114, on right: 115
for_elist (106)
    on left: 116 117, on right: 115 119
for_cond (107)
    on left: 118, on right: 115
for_end (108)
    on left: 119, on right: 115
returnstmt (109)
    on left: 120 121, on right: 10


state 0

    0 $accept: . program $end

    $end      reduce using rule 5 (multi_stmts)
    $default  reduce using rule 2 (@1)

    program      go to state 1
    multi_stmts  go to state 2
    @1           go to state 3


state 1

    0 $accept: program . $end

    $end  shift, and go to state 4


state 2

    1 program: multi_stmts .

    $default  reduce using rule 1 (program)


state 3

    4 multi_stmts: @1 . stmt @2 multi_stmts

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 29
    expr         go to state 30
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    block        go to state 40
    funcdef      go to state 41
    funcstart    go to state 42
    const        go to state 43
    number       go to state 44
    ifstmt       go to state 45
    if_start     go to state 46
    whilestmt    go to state 47
    whilestart   go to state 48
    forstmt      go to state 49
    returnstmt   go to state 50


state 4

    0 $accept: program $end .

    $default  accept


state 5

  107 if_start: IF . L_PARENTHES expr

    L_PARENTHES  shift, and go to state 51


state 6

  109 whilestart: WHILE .

    $default  reduce using rule 109 (whilestart)


state 7

  115 forstmt: FOR . L_PARENTHES @17 for_elist @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    L_PARENTHES  shift, and go to state 52


state 8

   88 funcstart: FUNCTION .

    $default  reduce using rule 88 (funcstart)


state 9

  120 returnstmt: RETURN . expr SEMICOLON
  121           | RETURN . SEMICOLON

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 53
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 54
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 10

   11 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 11

   12 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 56


state 12

   23 expr: NOT . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 57
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 13

   53 lvalue: LOCAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 58


state 14

   94 const: TRUE .

    $default  reduce using rule 94 (const)


state 15

   95 const: FALSE .

    $default  reduce using rule 95 (const)


state 16

   93 const: NIL .

    $default  reduce using rule 93 (const)


state 17

   39 term: MINUS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 59
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 18

   40 term: PPLUS . lvalue

    LOCAL        shift, and go to state 13
    DCOLON       shift, and go to state 21
    L_PARENTHES  shift, and go to state 60
    IDENTIFIER   shift, and go to state 28

    lvalue  go to state 61
    member  go to state 37
    call    go to state 62


state 19

   42 term: MMINUS . lvalue

    LOCAL        shift, and go to state 13
    DCOLON       shift, and go to state 21
    L_PARENTHES  shift, and go to state 60
    IDENTIFIER   shift, and go to state 28

    lvalue  go to state 63
    member  go to state 37
    call    go to state 62


state 20

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 21

   54 lvalue: DCOLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


state 22

   84 block: L_CBRACKET . @9 multi_stmts R_CBRACKET

    $default  reduce using rule 83 (@9)

    @9  go to state 65


state 23

   71 objectdef: L_SBRACKET . elist_for_table R_SBRACKET
   73          | L_SBRACKET . @7 indexed R_SBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    R_SBRACKET  reduce using rule 75 (elist_for_table)
    $default    reduce using rule 72 (@7)

    expr             go to state 66
    arexpr           go to state 31
    boolResexpr      go to state 32
    term             go to state 33
    assignmexpr      go to state 34
    primary          go to state 35
    lvalue           go to state 36
    member           go to state 37
    call             go to state 38
    objectdef        go to state 39
    @7               go to state 67
    elist_for_table  go to state 68
    const            go to state 43
    number           go to state 44


state 24

   38 term: L_PARENTHES . @5 expr R_PARENTHES
   50 primary: L_PARENTHES . funcdef R_PARENTHES
   62 call: L_PARENTHES . funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES

    FUNCTION  shift, and go to state 8

    $default  reduce using rule 37 (@5)

    @5         go to state 69
    funcdef    go to state 70
    funcstart  go to state 42


state 25

   96 number: INTEGER .

    $default  reduce using rule 96 (number)


state 26

   97 number: FLOAT .

    $default  reduce using rule 97 (number)


state 27

   92 const: STRING .

    $default  reduce using rule 92 (const)


state 28

   52 lvalue: IDENTIFIER .

    $default  reduce using rule 52 (lvalue)


state 29

    4 multi_stmts: @1 stmt . @2 multi_stmts

    $default  reduce using rule 3 (@2)

    @2  go to state 71


state 30

    6 stmt: expr . SEMICOLON
   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 85


state 31

   18 expr: arexpr .

    $default  reduce using rule 18 (expr)


state 32

   17 expr: boolResexpr .

    $default  reduce using rule 17 (expr)


state 33

   24 expr: term .

    $default  reduce using rule 24 (expr)


state 34

   16 expr: assignmexpr .

    $default  reduce using rule 16 (expr)


state 35

   44 term: primary .

    $default  reduce using rule 44 (term)


state 36

   41 term: lvalue . PPLUS
   43     | lvalue . MMINUS
   46 assignmexpr: lvalue . @6 EQ expr
   47 primary: lvalue .
   56 member: lvalue . DOT IDENTIFIER
   57       | lvalue . L_SBRACKET expr R_SBRACKET
   61 call: lvalue . callsuffix

    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    DOT          shift, and go to state 88
    DOTS         shift, and go to state 89
    L_SBRACKET   shift, and go to state 90
    L_PARENTHES  shift, and go to state 91

    EQ        reduce using rule 45 (@6)
    $default  reduce using rule 47 (primary)

    @6          go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 37

   55 lvalue: member .

    $default  reduce using rule 55 (lvalue)


state 38

   48 primary: call .
   58 member: call . DOT IDENTIFIER
   59       | call . L_SBRACKET expr R_SBRACKET
   60 call: call . L_PARENTHES elist R_PARENTHES

    DOT          shift, and go to state 96
    L_SBRACKET   shift, and go to state 97
    L_PARENTHES  shift, and go to state 98

    $default  reduce using rule 48 (primary)


state 39

   49 primary: objectdef .

    $default  reduce using rule 49 (primary)


state 40

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


state 41

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


state 42

   87 funcdef: funcstart . funcname L_PARENTHES @10 idlist R_PARENTHES @11 block

    IDENTIFIER  shift, and go to state 99

    $default  reduce using rule 90 (funcname)

    funcname  go to state 100


state 43

   51 primary: const .

    $default  reduce using rule 51 (primary)


state 44

   91 const: number .

    $default  reduce using rule 91 (const)


state 45

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


state 46

  105 ifstmt: if_start . R_PARENTHES stmt ELSE @14 stmt
  106       | if_start . R_PARENTHES stmt

    R_PARENTHES  shift, and go to state 101


state 47

    8 stmt: whilestmt .

    $default  reduce using rule 8 (stmt)


state 48

  108 whilestmt: whilestart . whilecond stmt

    L_PARENTHES  shift, and go to state 102

    whilecond  go to state 103


state 49

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


state 50

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


state 51

  107 if_start: IF L_PARENTHES . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 104
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 52

  115 forstmt: FOR L_PARENTHES . @17 for_elist @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    $default  reduce using rule 113 (@17)

    @17  go to state 105


state 53

  121 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 121 (returnstmt)


state 54

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
  120 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 106


state 55

   11 stmt: BREAK SEMICOLON .

    $default  reduce using rule 11 (stmt)


state 56

   12 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 57

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   23     | NOT expr .
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    $default  reduce using rule 23 (expr)


state 58

   53 lvalue: LOCAL IDENTIFIER .

    $default  reduce using rule 53 (lvalue)


state 59

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   39 term: MINUS expr .

    $default  reduce using rule 39 (term)


state 60

   62 call: L_PARENTHES . funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES

    FUNCTION  shift, and go to state 8

    funcdef    go to state 107
    funcstart  go to state 42


state 61

   40 term: PPLUS lvalue .
   56 member: lvalue . DOT IDENTIFIER
   57       | lvalue . L_SBRACKET expr R_SBRACKET
   61 call: lvalue . callsuffix

    DOT          shift, and go to state 88
    DOTS         shift, and go to state 89
    L_SBRACKET   shift, and go to state 90
    L_PARENTHES  shift, and go to state 91

    $default  reduce using rule 40 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 62

   58 member: call . DOT IDENTIFIER
   59       | call . L_SBRACKET expr R_SBRACKET
   60 call: call . L_PARENTHES elist R_PARENTHES

    DOT          shift, and go to state 96
    L_SBRACKET   shift, and go to state 97
    L_PARENTHES  shift, and go to state 98


state 63

   42 term: MMINUS lvalue .
   56 member: lvalue . DOT IDENTIFIER
   57       | lvalue . L_SBRACKET expr R_SBRACKET
   61 call: lvalue . callsuffix

    DOT          shift, and go to state 88
    DOTS         shift, and go to state 89
    L_SBRACKET   shift, and go to state 90
    L_PARENTHES  shift, and go to state 91

    $default  reduce using rule 42 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 64

   54 lvalue: DCOLON IDENTIFIER .

    $default  reduce using rule 54 (lvalue)


state 65

   84 block: L_CBRACKET @9 . multi_stmts R_CBRACKET

    R_CBRACKET  reduce using rule 5 (multi_stmts)
    $default    reduce using rule 2 (@1)

    multi_stmts  go to state 108
    @1           go to state 3


state 66

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   74 elist_for_table: expr . multi_exprs_for_table

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 109

    $default  reduce using rule 77 (multi_exprs_for_table)

    multi_exprs_for_table  go to state 110


state 67

   73 objectdef: L_SBRACKET @7 . indexed R_SBRACKET

    L_CBRACKET  shift, and go to state 111

    indexed      go to state 112
    indexedelem  go to state 113


state 68

   71 objectdef: L_SBRACKET elist_for_table . R_SBRACKET

    R_SBRACKET  shift, and go to state 114


state 69

   38 term: L_PARENTHES @5 . expr R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 115
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 70

   50 primary: L_PARENTHES funcdef . R_PARENTHES
   62 call: L_PARENTHES funcdef . R_PARENTHES L_PARENTHES elist R_PARENTHES

    R_PARENTHES  shift, and go to state 116


state 71

    4 multi_stmts: @1 stmt @2 . multi_stmts

    $end        reduce using rule 5 (multi_stmts)
    R_CBRACKET  reduce using rule 5 (multi_stmts)
    $default    reduce using rule 2 (@1)

    multi_stmts  go to state 117
    @1           go to state 3


state 72

   20 expr: expr AND . @3 epsilon expr

    $default  reduce using rule 19 (@3)

    @3  go to state 118


state 73

   22 expr: expr OR . @4 epsilon expr

    $default  reduce using rule 21 (@4)

    @4  go to state 119


state 74

   26 arexpr: expr PLUS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 120
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 75

   27 arexpr: expr MINUS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 121
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 76

   28 arexpr: expr MULT . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 122
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 77

   29 arexpr: expr DIV . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 123
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 78

   30 arexpr: expr MOD . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 124
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 79

   35 boolResexpr: expr EQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 125
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 80

   36 boolResexpr: expr NEQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 126
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 81

   31 boolResexpr: expr GREATER . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 127
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 82

   33 boolResexpr: expr LESS . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 128
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 83

   32 boolResexpr: expr GREATER_EQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 129
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 84

   34 boolResexpr: expr LESS_EQUAL . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 130
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 85

    6 stmt: expr SEMICOLON .

    $default  reduce using rule 6 (stmt)


state 86

   41 term: lvalue PPLUS .

    $default  reduce using rule 41 (term)


state 87

   43 term: lvalue MMINUS .

    $default  reduce using rule 43 (term)


state 88

   56 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


state 89

   66 methodcall: DOTS . IDENTIFIER L_PARENTHES elist R_PARENTHES

    IDENTIFIER  shift, and go to state 132


state 90

   57 member: lvalue L_SBRACKET . expr R_SBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 133
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 91

   65 normcall: L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 68 (elist)

    expr         go to state 134
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    elist        go to state 135
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 92

   46 assignmexpr: lvalue @6 . EQ expr

    EQ  shift, and go to state 136


state 93

   61 call: lvalue callsuffix .

    $default  reduce using rule 61 (call)


state 94

   63 callsuffix: normcall .

    $default  reduce using rule 63 (callsuffix)


state 95

   64 callsuffix: methodcall .

    $default  reduce using rule 64 (callsuffix)


state 96

   58 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 137


state 97

   59 member: call L_SBRACKET . expr R_SBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 138
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 98

   60 call: call L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 68 (elist)

    expr         go to state 134
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    elist        go to state 139
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 99

   89 funcname: IDENTIFIER .

    $default  reduce using rule 89 (funcname)


state 100

   87 funcdef: funcstart funcname . L_PARENTHES @10 idlist R_PARENTHES @11 block

    L_PARENTHES  shift, and go to state 140


state 101

  105 ifstmt: if_start R_PARENTHES . stmt ELSE @14 stmt
  106       | if_start R_PARENTHES . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 141
    expr         go to state 30
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    block        go to state 40
    funcdef      go to state 41
    funcstart    go to state 42
    const        go to state 43
    number       go to state 44
    ifstmt       go to state 45
    if_start     go to state 46
    whilestmt    go to state 47
    whilestart   go to state 48
    forstmt      go to state 49
    returnstmt   go to state 50


state 102

  112 whilecond: L_PARENTHES . @15 expr @16 R_PARENTHES

    $default  reduce using rule 110 (@15)

    @15  go to state 142


state 103

  108 whilestmt: whilestart whilecond . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 143
    expr         go to state 30
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    block        go to state 40
    funcdef      go to state 41
    funcstart    go to state 42
    const        go to state 43
    number       go to state 44
    ifstmt       go to state 45
    if_start     go to state 46
    whilestmt    go to state 47
    whilestart   go to state 48
    forstmt      go to state 49
    returnstmt   go to state 50


state 104

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
  107 if_start: IF L_PARENTHES expr .

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 107 (if_start)


state 105

  115 forstmt: FOR L_PARENTHES @17 . for_elist @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 117 (for_elist)

    expr         go to state 144
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44
    for_elist    go to state 145


state 106

  120 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 120 (returnstmt)


state 107

   62 call: L_PARENTHES funcdef . R_PARENTHES L_PARENTHES elist R_PARENTHES

    R_PARENTHES  shift, and go to state 146


state 108

   84 block: L_CBRACKET @9 multi_stmts . R_CBRACKET

    R_CBRACKET  shift, and go to state 147


state 109

   76 multi_exprs_for_table: COMMA . expr multi_exprs_for_table

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 148
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 110

   74 elist_for_table: expr multi_exprs_for_table .

    $default  reduce using rule 74 (elist_for_table)


state 111

   82 indexedelem: L_CBRACKET . expr @8 COLON expr R_CBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 149
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 112

   73 objectdef: L_SBRACKET @7 indexed . R_SBRACKET

    R_SBRACKET  shift, and go to state 150


state 113

   78 indexed: indexedelem . multi_indexedelem

    COMMA  shift, and go to state 151

    $default  reduce using rule 80 (multi_indexedelem)

    multi_indexedelem  go to state 152


state 114

   71 objectdef: L_SBRACKET elist_for_table R_SBRACKET .

    $default  reduce using rule 71 (objectdef)


state 115

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   38 term: L_PARENTHES @5 expr . R_PARENTHES

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    R_PARENTHES    shift, and go to state 153


state 116

   50 primary: L_PARENTHES funcdef R_PARENTHES .
   62 call: L_PARENTHES funcdef R_PARENTHES . L_PARENTHES elist R_PARENTHES

    L_PARENTHES  shift, and go to state 154

    $default  reduce using rule 50 (primary)


state 117

    4 multi_stmts: @1 stmt @2 multi_stmts .

    $default  reduce using rule 4 (multi_stmts)


state 118

   20 expr: expr AND @3 . epsilon expr

    $default  reduce using rule 25 (epsilon)

    epsilon  go to state 155


state 119

   22 expr: expr OR @4 . epsilon expr

    $default  reduce using rule 25 (epsilon)

    epsilon  go to state 156


state 120

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   26       | expr PLUS expr .
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77
    MOD   shift, and go to state 78

    $default  reduce using rule 26 (arexpr)


state 121

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   27       | expr MINUS expr .
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77
    MOD   shift, and go to state 78

    $default  reduce using rule 27 (arexpr)


state 122

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   28       | expr MULT expr .
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    $default  reduce using rule 28 (arexpr)


state 123

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   29       | expr DIV expr .
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    $default  reduce using rule 29 (arexpr)


state 124

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   30       | expr MOD expr .
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    $default  reduce using rule 30 (arexpr)


state 125

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   35            | expr EQUAL expr .
   36            | expr . NEQUAL expr

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 35 (boolResexpr)


state 126

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   36            | expr NEQUAL expr .

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 36 (boolResexpr)


state 127

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   31            | expr GREATER expr .
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULT   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 31 (boolResexpr)


state 128

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   33            | expr LESS expr .
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULT   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 33 (boolResexpr)


state 129

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   32            | expr GREATER_EQUAL expr .
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULT   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 32 (boolResexpr)


state 130

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   34            | expr LESS_EQUAL expr .
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULT   shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 34 (boolResexpr)


state 131

   56 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 56 (member)


state 132

   66 methodcall: DOTS IDENTIFIER . L_PARENTHES elist R_PARENTHES

    L_PARENTHES  shift, and go to state 157


state 133

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   57 member: lvalue L_SBRACKET expr . R_SBRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    R_SBRACKET     shift, and go to state 158


state 134

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   67 elist: expr . multi_exprs

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 159

    $default  reduce using rule 70 (multi_exprs)

    multi_exprs  go to state 160


state 135

   65 normcall: L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 161


state 136

   46 assignmexpr: lvalue @6 EQ . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 162
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 137

   58 member: call DOT IDENTIFIER .

    $default  reduce using rule 58 (member)


state 138

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   59 member: call L_SBRACKET expr . R_SBRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    R_SBRACKET     shift, and go to state 163


state 139

   60 call: call L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 164


state 140

   87 funcdef: funcstart funcname L_PARENTHES . @10 idlist R_PARENTHES @11 block

    $default  reduce using rule 85 (@10)

    @10  go to state 165


state 141

  105 ifstmt: if_start R_PARENTHES stmt . ELSE @14 stmt
  106       | if_start R_PARENTHES stmt .

    ELSE  shift, and go to state 166

    $default  reduce using rule 106 (ifstmt)


state 142

  112 whilecond: L_PARENTHES @15 . expr @16 R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 167
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 143

  108 whilestmt: whilestart whilecond stmt .

    $default  reduce using rule 108 (whilestmt)


state 144

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
  116 for_elist: expr . multi_exprs

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 159

    $default  reduce using rule 70 (multi_exprs)

    multi_exprs  go to state 168


state 145

  115 forstmt: FOR L_PARENTHES @17 for_elist . @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    $default  reduce using rule 114 (@18)

    @18  go to state 169


state 146

   62 call: L_PARENTHES funcdef R_PARENTHES . L_PARENTHES elist R_PARENTHES

    L_PARENTHES  shift, and go to state 154


state 147

   84 block: L_CBRACKET @9 multi_stmts R_CBRACKET .

    $default  reduce using rule 84 (block)


state 148

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   76 multi_exprs_for_table: COMMA expr . multi_exprs_for_table

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 109

    $default  reduce using rule 77 (multi_exprs_for_table)

    multi_exprs_for_table  go to state 170


state 149

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   82 indexedelem: L_CBRACKET expr . @8 COLON expr R_CBRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 81 (@8)

    @8  go to state 171


state 150

   73 objectdef: L_SBRACKET @7 indexed R_SBRACKET .

    $default  reduce using rule 73 (objectdef)


state 151

   79 multi_indexedelem: COMMA . indexedelem multi_indexedelem

    L_CBRACKET  shift, and go to state 111

    indexedelem  go to state 172


state 152

   78 indexed: indexedelem multi_indexedelem .

    $default  reduce using rule 78 (indexed)


state 153

   38 term: L_PARENTHES @5 expr R_PARENTHES .

    $default  reduce using rule 38 (term)


state 154

   62 call: L_PARENTHES funcdef R_PARENTHES L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 68 (elist)

    expr         go to state 134
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    elist        go to state 173
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 155

   20 expr: expr AND @3 epsilon . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 174
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 156

   22 expr: expr OR @4 epsilon . expr

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 175
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 157

   66 methodcall: DOTS IDENTIFIER L_PARENTHES . elist R_PARENTHES

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 68 (elist)

    expr         go to state 134
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    elist        go to state 176
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 158

   57 member: lvalue L_SBRACKET expr R_SBRACKET .

    $default  reduce using rule 57 (member)


state 159

   69 multi_exprs: COMMA . expr multi_exprs

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 177
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 160

   67 elist: expr multi_exprs .

    $default  reduce using rule 67 (elist)


state 161

   65 normcall: L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 65 (normcall)


state 162

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   46 assignmexpr: lvalue @6 EQ expr .

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 46 (assignmexpr)


state 163

   59 member: call L_SBRACKET expr R_SBRACKET .

    $default  reduce using rule 59 (member)


state 164

   60 call: call L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 60 (call)


state 165

   87 funcdef: funcstart funcname L_PARENTHES @10 . idlist R_PARENTHES @11 block

    IDENTIFIER  shift, and go to state 178

    $default  reduce using rule 100 (idlist)

    idlist  go to state 179


state 166

  105 ifstmt: if_start R_PARENTHES stmt ELSE . @14 stmt

    $default  reduce using rule 104 (@14)

    @14  go to state 180


state 167

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
  112 whilecond: L_PARENTHES @15 expr . @16 R_PARENTHES

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 111 (@16)

    @16  go to state 181


state 168

  116 for_elist: expr multi_exprs .

    $default  reduce using rule 116 (for_elist)


state 169

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 . SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt

    SEMICOLON  shift, and go to state 182


state 170

   76 multi_exprs_for_table: COMMA expr multi_exprs_for_table .

    $default  reduce using rule 76 (multi_exprs_for_table)


state 171

   82 indexedelem: L_CBRACKET expr @8 . COLON expr R_CBRACKET

    COLON  shift, and go to state 183


state 172

   79 multi_indexedelem: COMMA indexedelem . multi_indexedelem

    COMMA  shift, and go to state 151

    $default  reduce using rule 80 (multi_indexedelem)

    multi_indexedelem  go to state 184


state 173

   62 call: L_PARENTHES funcdef R_PARENTHES L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 185


state 174

   20 expr: expr . AND @3 epsilon expr
   20     | expr AND @3 epsilon expr .
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 20 (expr)


state 175

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   22     | expr OR @4 epsilon expr .
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr

    AND            shift, and go to state 72
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 22 (expr)


state 176

   66 methodcall: DOTS IDENTIFIER L_PARENTHES elist . R_PARENTHES

    R_PARENTHES  shift, and go to state 186


state 177

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   69 multi_exprs: COMMA expr . multi_exprs

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 159

    $default  reduce using rule 70 (multi_exprs)

    multi_exprs  go to state 187


state 178

   99 idlist: IDENTIFIER . @12 multi_id

    $default  reduce using rule 98 (@12)

    @12  go to state 188


state 179

   87 funcdef: funcstart funcname L_PARENTHES @10 idlist . R_PARENTHES @11 block

    R_PARENTHES  shift, and go to state 189


state 180

  105 ifstmt: if_start R_PARENTHES stmt ELSE @14 . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 190
    expr         go to state 30
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    block        go to state 40
    funcdef      go to state 41
    funcstart    go to state 42
    const        go to state 43
    number       go to state 44
    ifstmt       go to state 45
    if_start     go to state 46
    whilestmt    go to state 47
    whilestart   go to state 48
    forstmt      go to state 49
    returnstmt   go to state 50


state 181

  112 whilecond: L_PARENTHES @15 expr @16 . R_PARENTHES

    R_PARENTHES  shift, and go to state 191


state 182

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON . for_cond SEMICOLON for_end R_PARENTHES stmt

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 192
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44
    for_cond     go to state 193


state 183

   82 indexedelem: L_CBRACKET expr @8 COLON . expr R_CBRACKET

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    expr         go to state 194
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44


state 184

   79 multi_indexedelem: COMMA indexedelem multi_indexedelem .

    $default  reduce using rule 79 (multi_indexedelem)


state 185

   62 call: L_PARENTHES funcdef R_PARENTHES L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 62 (call)


state 186

   66 methodcall: DOTS IDENTIFIER L_PARENTHES elist R_PARENTHES .

    $default  reduce using rule 66 (methodcall)


state 187

   69 multi_exprs: COMMA expr multi_exprs .

    $default  reduce using rule 69 (multi_exprs)


state 188

   99 idlist: IDENTIFIER @12 . multi_id

    COMMA  shift, and go to state 195

    $default  reduce using rule 103 (multi_id)

    multi_id  go to state 196


state 189

   87 funcdef: funcstart funcname L_PARENTHES @10 idlist R_PARENTHES . @11 block

    $default  reduce using rule 86 (@11)

    @11  go to state 197


state 190

  105 ifstmt: if_start R_PARENTHES stmt ELSE @14 stmt .

    $default  reduce using rule 105 (ifstmt)


state 191

  112 whilecond: L_PARENTHES @15 expr @16 R_PARENTHES .

    $default  reduce using rule 112 (whilecond)


state 192

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
  118 for_cond: expr .

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 118 (for_cond)


state 193

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON for_cond . SEMICOLON for_end R_PARENTHES stmt

    SEMICOLON  shift, and go to state 198


state 194

   20 expr: expr . AND @3 epsilon expr
   22     | expr . OR @4 epsilon expr
   26 arexpr: expr . PLUS expr
   27       | expr . MINUS expr
   28       | expr . MULT expr
   29       | expr . DIV expr
   30       | expr . MOD expr
   31 boolResexpr: expr . GREATER expr
   32            | expr . GREATER_EQUAL expr
   33            | expr . LESS expr
   34            | expr . LESS_EQUAL expr
   35            | expr . EQUAL expr
   36            | expr . NEQUAL expr
   82 indexedelem: L_CBRACKET expr @8 COLON expr . R_CBRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    R_CBRACKET     shift, and go to state 199


state 195

  102 multi_id: COMMA . IDENTIFIER @13 multi_id

    IDENTIFIER  shift, and go to state 200


state 196

   99 idlist: IDENTIFIER @12 multi_id .

    $default  reduce using rule 99 (idlist)


state 197

   87 funcdef: funcstart funcname L_PARENTHES @10 idlist R_PARENTHES @11 . block

    L_CBRACKET  shift, and go to state 22

    block  go to state 201


state 198

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON for_cond SEMICOLON . for_end R_PARENTHES stmt

    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    DCOLON       shift, and go to state 21
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    $default  reduce using rule 117 (for_elist)

    expr         go to state 144
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    const        go to state 43
    number       go to state 44
    for_elist    go to state 202
    for_end      go to state 203


state 199

   82 indexedelem: L_CBRACKET expr @8 COLON expr R_CBRACKET .

    $default  reduce using rule 82 (indexedelem)


state 200

  102 multi_id: COMMA IDENTIFIER . @13 multi_id

    $default  reduce using rule 101 (@13)

    @13  go to state 204


state 201

   87 funcdef: funcstart funcname L_PARENTHES @10 idlist R_PARENTHES @11 block .

    $default  reduce using rule 87 (funcdef)


state 202

  119 for_end: for_elist .

    $default  reduce using rule 119 (for_end)


state 203

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON for_cond SEMICOLON for_end . R_PARENTHES stmt

    R_PARENTHES  shift, and go to state 205


state 204

  102 multi_id: COMMA IDENTIFIER @13 . multi_id

    COMMA  shift, and go to state 195

    $default  reduce using rule 103 (multi_id)

    multi_id  go to state 206


state 205

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES . stmt

    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    FOR          shift, and go to state 7
    FUNCTION     shift, and go to state 8
    RETURN       shift, and go to state 9
    BREAK        shift, and go to state 10
    CONTINUE     shift, and go to state 11
    NOT          shift, and go to state 12
    LOCAL        shift, and go to state 13
    TRUE         shift, and go to state 14
    FALSE        shift, and go to state 15
    NIL          shift, and go to state 16
    MINUS        shift, and go to state 17
    PPLUS        shift, and go to state 18
    MMINUS       shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DCOLON       shift, and go to state 21
    L_CBRACKET   shift, and go to state 22
    L_SBRACKET   shift, and go to state 23
    L_PARENTHES  shift, and go to state 24
    INTEGER      shift, and go to state 25
    FLOAT        shift, and go to state 26
    STRING       shift, and go to state 27
    IDENTIFIER   shift, and go to state 28

    stmt         go to state 207
    expr         go to state 30
    arexpr       go to state 31
    boolResexpr  go to state 32
    term         go to state 33
    assignmexpr  go to state 34
    primary      go to state 35
    lvalue       go to state 36
    member       go to state 37
    call         go to state 38
    objectdef    go to state 39
    block        go to state 40
    funcdef      go to state 41
    funcstart    go to state 42
    const        go to state 43
    number       go to state 44
    ifstmt       go to state 45
    if_start     go to state 46
    whilestmt    go to state 47
    whilestart   go to state 48
    forstmt      go to state 49
    returnstmt   go to state 50


state 206

  102 multi_id: COMMA IDENTIFIER @13 multi_id .

    $default  reduce using rule 102 (multi_id)


state 207

  115 forstmt: FOR L_PARENTHES @17 for_elist @18 SEMICOLON for_cond SEMICOLON for_end R_PARENTHES stmt .

    $default  reduce using rule 115 (forstmt)
